{regexreplace;
{aset;exec;true}
{aset;return}
{aset;continue}
{aset;~promote}
{aset;~promote_piece}
{aset;~passant}
{aset;~move_success}
{aset;nl;​{nl}}
{aset;attack}
{aset;version;v1.7 Build 2}
{aset;aph;
 '
}
{inject;;'}
{aset;help;
```ruby
`Chess Help Menu {aget;version}` ``` 
**Commands:**
1. `t!t chess theme` - Changes your style to the desired theme. 
2. `t!t chess start <@user> [w|b]` - Starts a match against user. If a color is chosen, that will be your color.
3. `t!t chess move <pos1> <pos2> [queen|knight|rook|bishop]` - Moves the piece in `pos1` to `pos2`, example you move the rook at `a1` to `a8`, it ill be `t!t chess move a1 a8`. The queen, knight, rook, and bishop are when promoting a pawn.
4. `t!t chess <forfeit|quit|stop|end>` - Forfeit your current match and lose the game.
5. `t!t chess stalemate` - To announce if your current game is a stalemate. 
```py
>>> Made by: Kao#0001```
}
{aset;won;
	:tada: **Congratulations! ** {username}#{userdiscrim} has won the game!
}
{aset;chess_link0;
	http://jinchess.com/chessboard/?p= 
}
{aset;chess_link1;
	http://apronus.com/chess/diagram/stagram.php?d=P
}
{if;==;;{aget;{userid}chess_board};{aset;{userid}chess_board;plain}}
{if;==;;{aget;{userid}chess_piece};{aset;{userid}chess_piece;alpha}}
{if;==;;{aget;{userid}chess_piecen};{aset;{userid}chess_piecen;1}}
{if;==;;{aget;{userid}chess_size};{aset;{userid}chess_size;xl}}
{if;==;;{aget;{userid}chess_sizen};{aset;{userid}chess_sizen;37}}
{if;==;;{aget;{userid}chess_color_dark};{aset;{userid}chess_color_dark;8f604f}}
{if;==;;{aget;{userid}chess_color_light};{aset;{userid}chess_color_light;ffcc99}}
{if;==;;{aget;{userid}chess_color_darkn};{aset;{userid}chess_color_darkn;8F604F}}
{if;==;;{aget;{userid}chess_color_lightn};{aset;{userid}chess_color_lightn;FFCC99}}
{if;==;;{aget;{userid}chess_coord};{aset;{userid}chess_coord;o}}
{if;==;;{aget;{userid}chess_coordn};{aset;{userid}chess_coordn;o}}
{if;==;;{aget;{userid}chess_style};{aset;{userid}chess_style;new}}
{aset;~a;1}{aset;~1;a}
{aset;~b;2}{aset;~2;b}
{aset;~c;3}{aset;~3;c}
{aset;~d;4}{aset;~4;d}
{aset;~e;5}{aset;~5;e}
{aset;~f;6}{aset;~6;f}
{aset;~g;7}{aset;~7;g}
{aset;~h;8}{aset;~8;h}
{switch;{lower;{args;0}};
	help;
		{regexreplace;
			{aget;help}
		;/\t+|^[\r\n]+/gm;};
	theme;
		{regexreplace;
			{if;!=;1;{aget;firstrun};
			{if;==;`User not found`;{userid;246903976937783296};
				{set;username;Kao}
				{set;userdiscrim;0001};
				{set;username;{username;246903976937783296}}
				{set;userdiscrim;{userdiscrim;246903976937783296}}
			}
			```rb
			`Chess Tag {aget;version}` ```
			**Introduction:**
			You have copied this tag from the creator, **{get;username}#{get;userdiscrim}**.
			Thank you for appreciating my work enough that you wanted it on your own server. Be sure to thank me, and to make sure to tell me that you have copied it. Run the tag `t!t chess_copy` in the Tatsumaki Server in order to get instructions on how to make the tag work.;
			{if;==;obsolete;{lower;{args;1}};
				{if;==;obsolete;{aget;{userid}chess_style};
					{aset;{userid}chess_style;new}:ok: | **Set your style to the new type!**;
					{aset;{userid}chess_style;obsolete}:ok: | **Set your style to the obsolete type!**
				};
			{if;==;obsolete;{aget;{userid}chess_style};
				{switch;{lower;{args;1}};;There are currently two customizable themes, the chess board and the chess pieces. Please do `t!t chess theme <piece|board> <type>` in order to get that style. Putting no type gives the default theme.
						{regexreplace;```prolog
						​{pad;l;Piece;18;{space}}
						{pad;l;adventure;14;{space}} | magnetic
						{pad;l;adventure-flat;14;{space}} | magnetic-flat
						{pad;l;alfonso-x;14;{space}} | mark
						{pad;l;alfonso-x-flat;14;{space}} | mark-flat
						{pad;l;alpha;14;{space}} | marroquin
						{pad;l;alpha-flat;14;{space}} | marroquin-flat
						{pad;l;berlin;14;{space}} | maya
						{pad;l;berlin-flat;14;{space}} | maya-flat
						{pad;l;condal;14;{space}} | medieval
						{pad;l;condal-flat;14;{space}} | medieval-flat
						{pad;l;harlequin;14;{space}} | merida
						{pad;l;harlequin-flat;14;{space}} | merida-flat
						{pad;l;kingdom;14;{space}} | motif
						{pad;l;kingdom-flat;14;{space}} | motif-flat
						{pad;l;leipzig;14;{space}} | smart
						{pad;l;leipzig-flat;14;{space}} | smart-flat
						{pad;l;line;14;{space}} | usual
						{pad;l;line-flat;14;{space}} | usual-flat
						{pad;l;lucena;14;{space}} | utrecht
						{pad;l;lucena-flat;14;{space}} | utrecht-flat``````prolog
						​{pad;l;Board;18;{space}}
						{pad;l;cold-marble;14;{space}} | red-marble
						{pad;l;gray-tiles;14;{space}} | slate
						{pad;l;green-marble;14;{space}} | winter
						{pad;l;pale-wood;14;{space}} | wooden-dark
						{pad;l;plain;14;{space}} |``` 
						Do `t!t chess theme advanced` to get more info about advanced features. Do `t!t chess theme obsolete` to get the new style of the board.;/\t/g;};
					board;
						{aset;~p_stat;
							{switch;{args;2};;2;
								cold-marble;1;
								gray-tiles;1;
								green-marble;1;
								pale-wood;1;
								plain;1;
								red-marble;1;
								slate;1;
								winter;1;
								wooden-dark;1;
								0
							}
						}{regexreplace;
						{switch;{aget;~p_stat};
							1;Succesfully set board style to `{args;2}`!
								{aset;{userid}chess_board;{args;2}};
							2;Reset board style to `plain`!
								{aset;{userid}chess_board;plain}
								{aset;{userid}chess_color_dark;8f604f}
								{aset;{userid}chess_color_light;ffcc99};
							0;:x: You gave an invalid name!
						};/\t/g;};
					piece;
						{aset;~p_stat;
							{switch;{args;2};;2;
								adventure;1;
								adventure-flat;1;
								alfonso-x;1;
								alfonso-x-flat;1;
								alpha;1;
								alpha-flat;1;
								berlin;1;
								berlin-flat;1;
								condal;1;
								condal-flat;1;
								harlequin;1;
								harlequin-flat;1;
								kingdom;1;
								kingdom-flat;1;
								leipzig;1;
								leipzig-flat;1;
								line;1;
								line-flat;1;
								lucena;1;
								lucena-flat;1;
								magnetic;1;
								magnetic-flat;1;
								mark;1;
								mark-flat;1;
								marroquin;1;
								marroquin-flat;1;
								maya;1;
								maya-flat;1;
								medieval;1;
								medieval-flat;1;
								merida;1;
								merida-flat;1;
								motif;1;
								motif-flat;1;
								smart;1;
								smart-flat;1;
								usual;1;
								usual-flat;1;
								utrecht;1;
								utrecht-flat;1;
								0
							}
						}
						{regexreplace;
						{switch;{aget;~p_stat};
							1;Succesfully set piece style to `{args;2}`!
								{aset;{userid}chess_piece;{args;2}};
							2;Reset piece style to `alpha`!
								{aset;{userid}chess_piece;alpha};
							0;:x: You gave an invalid name!
						};/\t/g;};
					advanced;
						{switch;{args;2};;Please do `t!t chess theme advanced <type>` in order to get that style.
							{regexreplace;```prolog
							{pad;l;Sizes;12;{space}}
							{pad;l;Name;8;{space}} | Description
							{aget;nl}
							{pad;l;s;8;{space}} | Small sized board.
							{pad;l;m;8;{space}} | Medium sized board. (Default)
							{pad;l;l;8;{space}} | Large sized board.
							{pad;l;xl;8;{space}} | Extra large sized board.
							{aget;nl}
							{pad;l;r;8;{space}} | coordinates at the Rim of the board.
							{pad;l;o;8;{space}} | coordinates at the Outside of the board. (Default)
							{pad;l;nc;8;{space}} | No Coordinates shown.``` 
							Do `t!t chess theme advanced` to get more info about advanced features.;/\t/g;};
							s;Set chess board size to small!{aset;{userid}chess_size;s};
							m;Set chess board size to medium!{aset;{userid}chess_size;m};
							l;Set chess board size to large!{aset;{userid}chess_size;l};
							xl;Set chess board size to extra large!{aset;{userid}chess_size;xl};
							r;Set chess coordinates to the rim of the board!{aset;{userid}chess_coord;r};
							o;Set chess coordinates to the outside of the board!{aset;{userid}chess_coord;o};
							nc;Hidden chess coordinates!{aset;{userid}chess_coord;nc};
							:x: Unrecognized command!
						};
					:x: Unrecognized command!
				};
				{switch;{lower;{args;1}};;
					Please do `t!t chess theme <type>` in order to get that style.
					{regexreplace;```prolog
					​{pad;l;Piece;11;{space}}
					{pad;l;alpha;7;{space}} | merida
					{pad;l;linares;7;{space}} | ``````prolog
					{pad;l;Sizes;12;{space}}
					{pad;l;Name;8;{space}} | Description
					{aget;nl}
					{pad;l;21;8;{space}} | 21px sized board.
					{pad;l;27;8;{space}} | 27px sized board.
					{pad;l;37;8;{space}} | 37px sized board. (Default)
					{pad;l;49;8;{space}} | 49px sized board.
					{pad;l;65;8;{space}} | 65px sized board.
					{pad;l;87;8;{space}} | 87px sized board.
					{pad;l;115;8;{space}} | 115px sized board.
					{pad;l;dark;8;{space}} | `dark [hex]` code for the dark colored tiles. Leave blank for default.
					{pad;l;light;8;{space}} | `light [hex]` code for the light colored tiles. Leave blank for default.
					{aget;nl}
					{pad;l;o;8;{space}} | coordinates at the Outside of the board. (Default)
					{pad;l;nc;8;{space}} | No Coordinates shown.``` 
					Do `t!t chess theme obsolete` to use the old style of the board.;/\t/g;};
					alpha;Succesfully set piece style to alpha!{aset;{userid}chess_piecen;1};
					linares;Succesfully set piece style to linares!{aset;{userid}chess_piecen;2};
					merida;Succesfully set piece style to merida!{aset;{userid}chess_piecen;0};
					21;Set chess board size to 21px{aset;{userid}chess_sizen;21};
					27;Set chess board size to 27px{aset;{userid}chess_sizen;27};
					37;Set chess board size to 37px{aset;{userid}chess_sizen;37};
					49;Set chess board size to 49px{aset;{userid}chess_sizen;49};
					65;Set chess board size to 65px{aset;{userid}chess_sizen;65};
					87;Set chess board size to 87px{aset;{userid}chess_sizen;87};
					115;Set chess board size to 115px{aset;{userid}chess_sizen;115};
					o;Set chess coordinates to the outside of the board!{aset;{userid}chess_coordn;o};
					nc;Hidden chess coordinates!{aset;{userid}chess_coordn;nc};
					{switch;{lower;{args;1}};
						light;
							{if;==;;{args;2};
								{aset;{userid}chess_color_light;ffcc99}Reset light color to `{aget;{userid}chess_color_lightn}`!;
							{if;==;true;{regexreplace;{args;2};/([A-Fa-f0-9]{lb}6{rb})$/;true};
								{aset;{userid}chess_color_lightn;{upper;{args;2}}}Set light color to `{aget;{userid}chess_color_lightn}`!;
								:x: Provide a valid hexcode!
								{aset;return;true}
							}};
						dark;
							{if;==;;{args;2};
								{aset;{userid}chess_color_darkn;8F604F}Reset dark color to `{aget;{userid}chess_color_darkn}`!;
							{if;==;true;{regexreplace;{args;2};/([A-Fa-f0-9]{lb}6{rb})$/;true};
								{aset;{userid}chess_color_darkn;{upper;{args;2}}}Set dark color to `{aget;{userid}chess_color_darkn}`!;
								:x: Provide a valid hexcode!
								{aset;return;true}
							}};
						:x: Unrecognized command!
					}
				}
			}}}
		;/\t+|^[\r\n]+/gm;};
	start;
		{regexreplace;
			{if;!=;1;{aget;firstrun};
				{if;==;`User not found`;{userid;246903976937783296};
					{set;username;Kao}
					{set;userdiscrim;0001};
					{set;username;{username;246903976937783296}}
					{set;userdiscrim;{userdiscrim;246903976937783296}}
				}
				```rb
				`Chess Tag {aget;version}` ```
				**Introduction:**
				You have copied this tag from the creator, **{get;username}#{get;userdiscrim}**.
				Thank you for appreciating my work enough that you wanted it on your own server. But be sure to thank me, and to make sure to tell me that you have copied it. Run the tag `t!t chess_copy` in the Tatsumaki Server in order to get instructions on how to make the tag work.;
			{if;==;true;{aget;return};;
			{if;==;`User not found`;{userid;{args;1}};:x: User not found!;
			{if;==;{if;==;{aget;admin};{userid};;{userid}};{userid;{args;1}};:x: You cannot play against yourself!;
			{if;==;1;{aget;{userid;{args;1}}bl};:x: This user is blacklisted or is a bot!;
			{if;==;1;{aget;{userid;{args;1}}chess_game};:x: User is still playing a game!;
			{if;==;1;{aget;{userid}chess_game};:x: You are still playing a game! Do `t!t chess quit`;
			{aset;{userid}chess_instance;{base;{time;x};10;16}}
			{aset;~p;{aget;{userid}chess_instance}}
			{aset;{userid}en;{userid;{args;1}}}
			{aset;{aget;{userid}en}en;{userid}}
			{aset;{aget;{userid}en}chess_instance;{aget;~p}}
			{aset;{userid}chess_init;1}
			{aset;{aget;{userid}en}chess_init;1}
			{aset;{aget;~p}unmoved$k;1}
			{aset;{aget;~p}unmoved$K;1}
			{aset;{aget;~p}unmoved$r_a8;1}
			{aset;{aget;~p}unmoved$r_h8;1}
			{aset;{aget;~p}unmoved$R_a1;1}
			{aset;{aget;~p}unmoved$R_h1;1}
			{set;index0;1}{set;index1;7}{loop;1;8;{aset;{aget;~p}unmoved$p_{aget;~{get;index0}}{get;index1};1}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}
			{set;index0;1}{set;index1;2}{loop;1;8;{aset;{aget;~p}unmoved$P_{aget;~{get;index0}}{get;index1};1}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}
			{set;index0;1}{set;index1;5}{loop;1;8;{aset;{aget;~p}passant$p_{aget;~{get;index0}}{get;index1};0}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}
			{set;index0;1}{set;index1;4}{loop;1;8;{aset;{aget;~p}passant$P_{aget;~{get;index0}}{get;index1};0}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}
			**Chess game started with {username;{aget;{userid}en}}!** Instance: `{aget;~p}`.{aget;nl}
			{aset;{userid}chess_color;
				{switch;{args;2};
					w;w;
					white;w;
					b;b;
					black;b;
					r;{randchoice;w;b};
					random;{randchoice;w;b};
					{randchoice;w;b}
				}
			}
			{if;==;-1;{aget;{userid}chess_color};
				:x:  FATAL ERROR! Please report to tag creator. `chess_color is out of bounds.`;
			{aset;~p;{aget;{userid}chess_instance}}
			{aset;{aget;{userid}en}chess_color;{if;==;w;{aget;{userid}chess_color};b;w}}
			{aset;{aget;~p}p1;{if;==;w;{aget;{userid}chess_color};{userid};{aget;{userid}en}}}
			{aset;{aget;~p}p2;{if;==;b;{aget;{userid}chess_color};{userid};{aget;{userid}en}}}
			{aset;{userid}game;1}
			{aset;{aget;{userid}en}game;1}
			{aset;{userid}chess_game;1}
			{aset;{aget;{userid}en}chess_game;1}
			{aset;{aget;{userid}en}p1;{aget;{userid}p1}}
			{aset;{aget;{userid}en}p2;{aget;{userid}p2}}
			{aset;{aget;~p}tm;w}
			{aset;{aget;~p}move;1}
			{aset;{aget;~p}a8;r}{aset;{aget;~p}a1;R}
			{aset;{aget;~p}b8;n}{aset;{aget;~p}b1;N}
			{aset;{aget;~p}c8;b}{aset;{aget;~p}c1;B}
			{aset;{aget;~p}d8;q}{aset;{aget;~p}d1;Q}
			{aset;{aget;~p}e8;k}{aset;{aget;~p}e1;K}
			{aset;{aget;~p}f8;b}{aset;{aget;~p}f1;B}
			{aset;{aget;~p}g8;n}{aset;{aget;~p}g1;N}
			{aset;{aget;~p}h8;r}{aset;{aget;~p}h1;R}
			{set;index0;1}{set;index1;6}{loop;1;32;{aset;{aget;~p}{aget;~{get;index0}}{get;index1};-}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}
			{set;index0;1}{set;index1;7}{loop;1;8;{aset;{aget;~p}{aget;~{get;index0}}{get;index1};p}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}
			{set;index0;1}{set;index1;2}{loop;1;8;{aset;{aget;~p}{aget;~{get;index0}}{get;index1};P}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}
			**Game Started as {if;==;w;{aget;{userid}chess_color};White;Black}!**
			{aset;~p;{aget;{userid}chess_instance}} 
			**Move Number**: **__{aget;{aget;~p}move}__** - **{username;{aget;{aget;~p}p{if;==;w;{aget;{aget;~p}tm};1;2}}}{aget;aph}s** turn to move
			{switch;{aget;{userid}chess_style};
				obsolete;
					{aget;chess_link0}{set;index0;1}{set;index1;8}{loop;1;64;{aget;{aget;~p}{aget;~{get;index0}}{get;index1}}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}&tm={aget;{aget;~p}tm}{if;==;m;{aget;{userid}chess_size};;&s={aget;{userid}chess_size}}&tt={regexreplace;{username;{aget;{aget;~p}p2}};/[^a-zA-Z0-9]/g;}&ct={regexreplace;{username;{aget;{aget;~p}p1}};/[^a-zA-Z0-9]/g;}{switch;{aget;{userid}chess_board};;;~plain;;&bp={aget;{userid}chess_board}}{switch;{aget;{userid}chess_board};;;alpha;;&ps={aget;{userid}chess_piece}}{switch;{aget;{userid}chess_coord};;&cm=o;nc;;&cm={aget;{userid}chess_coord}};
					{aget;chess_link1}{set;index0;1}{set;index1;1}{regexreplace;{loop;1;64;{aget;{aget;~p}{aget;~{get;index0}}{get;index1}}{if;==;8;{get;index0};{set;index0;1}{set;index1;{incr;{get;index1}}};{set;index0;{incr;{get;index0}}}}};/-/g;_}&p={aget;{userid}chess_sizen}&s={aget;{userid}chess_piecen}&c={aget;{userid}chess_color_darkn}{aget;{userid}chess_color_lightn}{switch;{aget;{userid}chess_coordn};;&r=FFFFFF;nc;;o;&r=FFFFFF;&r=FFFFFF}{set;k;{if;&&;{if;!=;;{aget;~{aget;~p}1a};1;0};{if;!=;;{aget;~{aget;~p}1b};1;0};{aget;~{aget;~p}1a}Q{aget;~{aget;~p}1b}Q0Q0Q255A}{if;&&;{if;!=;;{aget;~{aget;~p}2a};1;0};{if;!=;;{aget;~{aget;~p}2b};1;0};{aget;~{aget;~p}2a}Q{aget;~{aget;~p}2b}Q0Q0Q255}}{if;!=;;{get;k};&k={get;k}}&z={aget;{aget;~p}tm}{if;==;b;{aget;{aget;~p}tm};&f=1}
			}
			}}}}}}}}
		;/\t+|^[\r\n]+/gm;};
	stalemate;
		{regexreplace;
			{if;==;true;{aget;return};;	
			{aset;~p;{aget;{userid}chess_instance}}
			{if;!=;1;{aget;{userid}chess_game};:x: You don not have an active chess game!;
			{if;!=;1;{aget;{aget;~p}stalemate_in};Stalemate announced! <@{aget;{userid}en}>, please do `t!t chess stalemate` to confirm it.{aset;{aget;~p}stalemate_in;1}{aset;{aget;~p}stalemate_en;{userid}};
			{if;==;{userid};{aget;{aget;~p}stalemate_en};:x: Your opponent must confirm the stalemate. <@{aget;{userid}en}>, please do `t!t chess stalemate` to confirm it.;**Stalemate!** Nobody has won.
			{aset;{userid}chess_game;0}{aset;{aget;{userid}en}chess_game;0}
			}}}}
		;/\t+|^[\r\n]+/gm;};
	move;
		{regexreplace;
			{if;!=;1;{aget;firstrun};
				{if;==;`User not found`;{userid;246903976937783296};
					{set;username;Kao}
					{set;userdiscrim;0001};
					{set;username;{username;246903976937783296}}
					{set;userdiscrim;{userdiscrim;246903976937783296}}
				}
				```rb
				`Chess Tag {aget;version}` ```
				**Introduction:**
				You have copied this tag from the creator, **{get;username}#{get;userdiscrim}**.
				Thank you for appreciating my work enough that you wanted it on your own server. But be sure to thank me, and to make sure to tell me that you have copied it. Run the tag `t!t chess_copy` in the Tatsumaki Server in order to get instructions on how to make the tag work.;
			{if;!=;1;{aget;{userid}chess_game};	
				:x: You do not have an active chess game!;
			{aset;~p;{aget;{userid}chess_instance}}
			{if;!=;{aget;{userid}chess_color};{aget;{aget;~p}tm};
				:x: It is not your turn yet! Wait for your opponent to make a move!;
			{if;<;{argslength};3;
				:x: Did you even try to move the piece!;
			{aset;~mv1;{substr;{args;1};0;2}}
			{aset;~mv2;{substr;{args;2};0;2}}
			{if;==;{aget;~mv1};{aget;~mv2};
				:x: Did you even try to move the piece?;
			{if;&&;
				{regexreplace;{aget;~mv1};/[a-h][1-8]/i;1};
				{regexreplace;{aget;~mv2};/[a-h][1-8]/i;1};;
				:x: Invalid move! `{if;!=;{regexreplace;{aget;~mv1};/[a-h][1-8]/;true};true;{aget;~mv1}} {if;!=;{regexreplace;{aget;~mv2};/[a-h][1-8]/;true};true;{aget;~mv2}} out of bounds`
				{aset;return;true}
			}
			{aset;~a;1}{aset;~1;a}
			{aset;~b;2}{aset;~2;b}
			{aset;~c;3}{aset;~3;c}
			{aset;~d;4}{aset;~4;d}
			{aset;~e;5}{aset;~5;e}
			{aset;~f;6}{aset;~6;f}
			{aset;~g;7}{aset;~7;g}
			{aset;~h;8}{aset;~8;h}
			{if;==;true;{aget;return};;
			{aset;~piece;{aget;{aget;~p}{aget;~mv1}}}
			{aset;~side;
				{if;==;-;{aget;{aget;~p}{aget;~mv1}};0;
				{if;==;true;{regexreplace;{aget;{aget;~p}{aget;~mv1}};/r|n|b|q|k|p/;true};1;2
				}}
			}
			{if;==;{if;==;w;{aget;{userid}chess_color};1;2};{aget;~side};
				This is not your piece you `heccin baka`;
			{switch;{aget;~side};
				0;
					:x: There is no piece here, what are you trying to move?
					{aset;return;true};
				-1;
					:x:  FATAL ERROR! Please report to tag creator.
					p_stat {aget;{userid}p_stat}
					chess_instance {aget;{userid}chess_instance}
					side {aget;~side}
					{aset;return;true};
				1;
					{if;!=;b;{aget;{userid}chess_color};
						:x: This is not your piece you `heccing baka`
						{aset;return;true}
					};
				2;
					{if;!=;w;{aget;{userid}chess_color};
						:x: This is not your piece you `heccing baka`
						{aset;return;true}
					};
				:x:  FATAL ERROR! Please report to tag creator. `{aget;~side} is undefined.`
			}
			{if;==;true;{aget;return};;
			{aset;~piece2;{aget;{aget;~p}{aget;~mv2}}}
			{aset;~side_2;
				{if;==;-;{aget;{aget;~p}{aget;~mv2}};0;
				{if;==;true;{regexreplace;{aget;{aget;~p}{aget;~mv2}};/r|n|b|q|k|p/;true};1;2
				}}
			}
			{if;==;{if;==;w;{aget;{userid}chess_color};2;1};{aget;~side_2};
				:x: Why are you attacking your own pieces `heccing baka`;
			{aset;~h1;{aget;~{substr;{aget;~mv1};0;1}}}
			{aset;~h2;{aget;~{substr;{aget;~mv2};0;1}}}
			{aset;~v1;{substr;{aget;~mv1};1;1}}
			{aset;~v2;{substr;{aget;~mv2};1;1}}
			{aset;~ver1;{if;>;{aget;~v1};{aget;~v2};{aget;~v1};{aget;~v2}}}
			{aset;~ver2;{if;<;{aget;~v1};{aget;~v2};{aget;~v1};{aget;~v2}}}
			{aset;~hor1;{if;>;{aget;~h1};{aget;~h2};{aget;~h1};{aget;~h2}}}
			{aset;~hor2;{if;<;{aget;~h1};{aget;~h2};{aget;~h1};{aget;~h2}}}
			{switch;{aget;{userid}chess_color};
				b;
					{switch;{aget;~piece};
						-;0;
						r; 
							{aset;~hor;{if;!=;{aget;~hor1};{aget;~hor2};1{aset;~rook_move;h};0}}
							{aset;~ver;{if;!=;{aget;~ver1};{aget;~ver2};1{aset;~rook_move;v};0}}
							{if;&&;{aget;~hor};{aget;~ver};
								:x: Invalid move! Rooks can only move horizontally or vertically, it cannot be both.;
								{switch;{aget;~rook_move};
									h;
										{if;!=;{aget;~v1};{aget;~v2};
											:x:  FATAL ERROR! Please report to tag creator. `v1 and v2 does not match`;
											{aset;~i_h1;{aget;~hor2}}
											{if;==;{math;-;{aget;~hor1};{aget;~hor2}};1;
												{aset;~continue;true};
												{if;!=;0;{math;-;{aget;~hor1};{aget;~hor2};1};
													{loop;1;{math;-;{aget;~hor1};{aget;~hor2};1};
														{aset;~i_h1;{incr;{aget;~i_h1}}}
														{if;!=;-;{aget;{aget;~p}{aget;~{aget;~i_h1}}{aget;~v1}}; 
															{aset;~continue;false}
														}
													}
												}
											}
											{if;==;false;{aget;continue};:x: Invalid move!;
												{switch;{aget;~side_2};
													0;
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													1;
														{if;!=;w;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													2;
														{if;!=;b;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													:x:  `side_2 is out of bounds.`
													{aset;return;true}
												}
												{if;==;true;{aget;return};;
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}
												}
											}
										};
									v;
										{if;!=;{aget;~h1};{aget;~h2};
											:x:  FATAL ERROR! Please report to tag creator. `h1 and h2 does not match`;
											{aset;~i_v1;{aget;~ver2}}
											{if;==;{math;-;{aget;~ver1};{aget;~ver2}};1;
												{aset;~continue;true};
												{if;!=;0;{math;-;{aget;~ver1};{aget;~ver2};1};
													{loop;1;{math;-;{aget;~ver1};{aget;~ver2};1};
														{aset;~i_v1;{incr;{aget;~i_v1}}}
														{if;!=;-;{aget;{aget;~p}{aget;~{aget;~h1}}{aget;~i_v1}};
															{aset;~continue;false};
														}
													}
												}
											}
											{if;==;false;{aget;continue};:x: Invalid move!;
												{switch;{aget;~side_2};
													0;
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													1;
														{if;!=;w;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													2;
														{if;!=;b;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													:x:  `side_2 is out of bounds.`
													{aset;return;true}
												}
												{if;==;true;{aget;return};;
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}
												}
											}
										}
								}
							}
							{if;==;true;{aget;~move_success};
								{switch;{aget;~mv1};
									a1;{aset;{aget;~p}unmoved$r_a8;0};
									h1;{aset;{aget;~p}unmoved$r_h8;0};
								}
							};
						n; 
							{aset;~hor;
								{switch;{aget;~hor1};
									{math;+;{aget;~hor2};1};1{aset;~h_m;v};
									{math;+;{aget;~hor2};2};2{aset;~h_m;h};
									0
								}
							}
							{aset;~ver;
								{switch;{aget;~ver1};
									{math;+;{aget;~ver2};2};1{aset;~v_m;v};
									{math;+;{aget;~ver2};1};2{aset;~v_m;h};
									0
								}
							}
							{if;==;{aget;~hor};{aget;~ver};
								{if;==;0;{aget;~hor};
									:x: Invalid move!
									{aset;return;true}
								};
								:x: Invalid move!
								{aset;return;true}
							}
							{if;==;true;{aget;return};;
								{aset;~i_h;{aget;~h2}}
								{aset;~i_v;{aget;~v2}}
								{if;!=;{aget;~h_m};{aget;~v_m};
									:x:  FATAL ERROR! Please report to tag creator. `h_m and v_m does not match.`;
									{if;==;false;{aget;continue};:x: Invalid move!;
										{switch;{aget;~side_2};
											0;
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;~move_success;true};
											1;
												{if;!=;w;{aget;{userid}chess_color};
													:x: You can not move your piece here!
													{aset;return;true}
												}
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;~move_success;true};
											2;
												{if;!=;b;{aget;{userid}chess_color};
													:x: You can not move your piece here!
													{aset;return;true}
												}
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;~move_success;true};
											:x:  `side_2 is out of bounds.`
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{switch;{aget;~move_success};
												1;{inject};
												true;{inject};
												:x: Invalid move!
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{aset;attack;true}
											}
										}
									}
								}
							};
						b; 
							{aset;~hor;{math;-;{aget;~hor1};{aget;~hor2}}}
							{aset;~ver;{math;-;{aget;~ver1};{aget;~ver2}}}
							{if;!=;{aget;~hor};{aget;~ver};
								:x: Invalid move! You can only move diagonally.;
								{aset;~i_h1;{aget;~h1}}
								{aset;~i_v1;{aget;~v1}}
								{if;!=;0;{math;-;{aget;~ver1};{aget;~ver2};1};
									{loop;1;{math;-;{aget;~ver1};{aget;~ver2};1};
										{aset;~i_h1;{if;>;{aget;~h1};{aget;~h2};{decr;{aget;~i_h1}};{incr;{aget;~i_h1}}}}
										{aset;~i_v1;{if;>;{aget;~v1};{aget;~v2};{decr;{aget;~i_v1}};{incr;{aget;~i_v1}}}}
										{if;!=;-;{aget;{aget;~p}{aget;~{aget;~i_h1}}{aget;~i_v1}};
											{aset;~continue;0}
										} 
									}
								}
								{if;==;0;{aget;continue};
									:x: You cannot move your piece here!;
									{switch;{aget;~side_2};
										0;
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true};
										1;
											{if;!=;w;{aget;{userid}chess_color};
												:x: You can not move your piece here!
												{aset;return;true}
											}
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true};
										2;
											{if;!=;b;{aget;{userid}chess_color};
												:x: You can not move your piece here!
												{aset;return;true}
											}
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true};
										:x:  `side_2 is out of bounds.`
										{aset;return;true}
									}
									{if;==;true;{aget;return};;
										{switch;{aget;~move_success};
											1;{inject};
											true;{inject};
											:x: Invalid move!
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{aset;attack;true}
										}
									}
								}
							};
						q; 
							{aset;~hor;{if;!=;{aget;~hor1};{aget;~hor2};1{aset;~queen_move;h};0}}
							{aset;~ver;{if;!=;{aget;~ver1};{aget;~ver2};1{aset;~queen_move;v};0}}
							{if;&&;{aget;~hor};{aget;~ver};
								{aset;~hor;{math;-;{aget;~hor1};{aget;~hor2}}}
								{aset;~ver;{math;-;{aget;~ver1};{aget;~ver2}}}
								{if;!=;{aget;~hor};{aget;~ver};
									:x: Invalid move! You can only move diagonally.;
									{aset;~i_h1;{aget;~h1}}
									{aset;~i_v1;{aget;~v1}}
										{if;!=;0;{math;-;{aget;~ver1};{aget;~ver2};1};
										{loop;1;{math;-;{aget;~ver1};{aget;~ver2};1};
											{aset;~i_h1;{if;>;{aget;~h1};{aget;~h2};{decr;{aget;~i_h1}};{incr;{aget;~i_h1}}}}
											{aset;~i_v1;{if;>;{aget;~v1};{aget;~v2};{decr;{aget;~i_v1}};{incr;{aget;~i_v1}}}}
											{if;!=;-;{aget;{aget;~p}{aget;~{aget;~i_h1}}{aget;~i_v1}};
												{aset;~continue;0}
											} 
										}
									}
									{if;==;0;{aget;continue};
										:x: You cannot move your piece here!;
										{switch;{aget;~side_2};
											0;
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;~move_success;true};
											1;
												{if;!=;w;{aget;{userid}chess_color};
													:x: You can not move your piece here!
													{aset;return;true}
												}
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;~move_success;true};
											2;
												{if;!=;b;{aget;{userid}chess_color};
													:x: You can not move your piece here!
													{aset;return;true}
												}
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;~move_success;true};
											:x:  `side_2 is out of bounds.`
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{switch;{aget;~move_success};
												1;{inject};
												true;{inject};
												:x: Invalid move!
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{aset;attack;true}
											}
										}
									}
								};
								{switch;{aget;~queen_move};
									h;
										{if;!=;{aget;~v1};{aget;~v2};
											:x:  FATAL ERROR! Please report to tag creator. `v1 and v2 does not match`;
											{aset;~i_h1;{aget;~hor2}}
											{if;==;{math;-;{aget;~hor1};{aget;~hor2}};1;
												{aset;~continue;true};
												{if;!=;0;{math;-;{aget;~hor1};{aget;~hor2};1};
													{loop;1;{math;-;{aget;~hor1};{aget;~hor2};1};
														{aset;~i_h1;{incr;{aget;~i_h1}}}
														{if;!=;-;{aget;{aget;~p}{aget;~{aget;~i_h1}}{aget;~v1}}; 
															{aset;~continue;false}
														}
													}
												}
											}
											{if;==;false;{aget;continue};:x: Invalid move!;
												{switch;{aget;~side_2};
													0;
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													1;
														{if;!=;w;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													2;
														{if;!=;b;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													:x:  `side_2 is out of bounds.`
													{aset;return;true}
												}
												{if;==;true;{aget;return};;
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}
												}
											}
										};
									v;
										{if;!=;{aget;~h1};{aget;~h2};
											:x:  FATAL ERROR! Please report to tag creator. `h1 and h2 does not match`;
											{aset;~i_v1;{aget;~ver2}}
											{if;==;{math;-;{aget;~ver1};{aget;~ver2}};1;
												{aset;~continue;true};
												{if;!=;0;{math;-;{aget;~ver1};{aget;~ver2};1};
													{loop;1;{math;-;{aget;~ver1};{aget;~ver2};1};
														{aset;~i_v1;{incr;{aget;~i_v1}}}
														{if;!=;-;{aget;{aget;~p}{aget;~{aget;~h1}}{aget;~i_v1}};
															{aset;~continue;false};
														}
													}
												}
											}
											{if;==;false;{aget;continue};:x: Invalid move!;
												{switch;{aget;~side_2};
													0;
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													1;
														{if;!=;w;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													2;
														{if;!=;b;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													:x:  `side_2 is out of bounds.`
													{aset;return;true}
												}
												{if;==;true;{aget;return};;
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}
												}
											}
										}
								}
							};
						k; 
							{if;==;1;{aget;{aget;~p}unmoved$k};
								{switch;{aget;~mv2};
									g8; 
										{if;&&;{if;==;1;{aget;{aget;~p}unmoved$k};1;0};{if;==;1;{aget;{aget;~p}unmoved$r_h8};1;0};;
											:x: The King or Rook has already moved and you cannot castle anymore!
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{if;!=;-;{aget;{aget;~p}f8};{aset;~continue;false}}
											{if;!=;-;{aget;{aget;~p}g8};{aset;~continue;false}}
											{if;==;false;{aget;continue};:x: Invalid move!;
												{switch;{aget;~side_2};
													0;
														{if;!=;r;{aget;{aget;~p}h8};:x:  FATAL ERROR! Please report to tag creator. `rook not found in h8`;
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;{aget;~p}f8;r}
														{aset;{aget;~p}h8;-}
														{aset;{aget;~p}unmoved$r_h8;0}
														{aset;{aget;~p}unmoved$k;0}
														{aset;~move_success;true}
														{switch;{aget;~move_success};
															1;{inject};
															true;{inject};
															:x: Invalid move!
															{aset;return;true}
														}
														{if;==;true;{aget;return};;
															{aset;attack;true}
														}};
													:x:  FATAL ERROR! Please report to tag creator. `{lb}userid{rb}side_2 out of bounds`
														{aset;return;true}
												}
											}
										};
									c8; 
										{if;&&;{if;==;1;{aget;{aget;~p}unmoved$k};1;0};{if;==;1;{aget;{aget;~p}unmoved$r_a8};1;0};;
											:x: The King or Rook has already moved and you cannot castle anymore!
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{if;!=;-;{aget;{aget;~p}b8};{aset;~continue;false}}
											{if;!=;-;{aget;{aget;~p}c8};{aset;~continue;false}}
											{if;!=;-;{aget;{aget;~p}d8};{aset;~continue;false}}
											{if;==;false;{aget;continue};:x: Invalid move!;
												{switch;{aget;~side_2};
													0;
														{if;!=;R;{aget;{aget;~p}h1};:x:  FATAL ERROR! Please report to tag creator. `rook not found in a8`;
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;{aget;~p}d8;r}
														{aset;{aget;~p}a8;-}
														{aset;{aget;~p}unmoved$r_a8;0}
														{aset;{aget;~p}unmoved$k;0}
														{aset;~move_success;true}
														{switch;{aget;~move_success};
															1;{inject};
															true;{inject};
															:x: Invalid move!
															{aset;return;true}
														}
														{if;==;true;{aget;return};;
															{aset;attack;true}
														}};
													:x:  FATAL ERROR! Please report to tag creator. `{lb}userid{rb}side_2 out of bounds`
														{aset;return;true}
												}
											}
										};
										{aset;~hor;
											{switch;{aget;~hor1};
												{math;+;{aget;~hor2};0};0;
												{math;+;{aget;~hor2};1};1;
												-1
											}
										}
										{aset;~ver;
											{switch;{aget;~ver1};
												{math;+;{aget;~ver2};0};0;
												{math;+;{aget;~ver2};1};1;
												-1
											}
										}
										{switch;-1;
											{aget;~ver};:x: Invalid move! {aset;return;true};
											{aget;~hor};:x: Invalid move! {aset;return;true}
										}
										{if;==;true;{aget;return};;
											{aset;~move_success;true}
											{aset;{aget;~p}unmoved$k;0}
											{switch;{aget;~side_2};
												0;
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true}
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													};
												1;
													{if;!=;w;{aget;{userid}chess_color};
														:x: You can not move your piece here!;
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true}
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}};
												2;
													{if;!=;b;{aget;{userid}chess_color};
														:x: You can not move your piece here!;
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true}
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}};
												:x:  FATAL ERROR! Please report to tag creator. `side_2 is out of bounds.`
												{aset;return;true}
											}
										}
								};
								{aset;~hor;
									{switch;{aget;~hor1};
										{math;+;{aget;~hor2};0};0;
										{math;+;{aget;~hor2};1};1;
										-1
									}
								}
								{aset;~ver;
									{switch;{aget;~ver1};
										{math;+;{aget;~ver2};0};0;
										{math;+;{aget;~ver2};1};1;
										-1
									}
								}
								{switch;-1;
									{aget;~ver};:x: Invalid move! {aset;return;true};
									{aget;~hor};:x: Invalid move! {aset;return;true}
								}
								{if;==;true;{aget;return};;
									{aset;~move_success;true}
									{aset;{aget;~p}unmoved$k;0}
									{switch;{aget;~side_2};
										0;
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true}
											{switch;{aget;~move_success};
												1;{inject};
												true;{inject};
												:x: Invalid move!
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{aset;attack;true}
											};
										1;
											{if;!=;w;{aget;{userid}chess_color};
												:x: You can not move your piece here!;
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true}
											{switch;{aget;~move_success};
												1;{inject};
												true;{inject};
												:x: Invalid move!
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{aset;attack;true}
											}};
										2;
											{if;!=;b;{aget;{userid}chess_color};
												:x: You can not move your piece here!;
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true}
											{switch;{aget;~move_success};
												1;{inject};
												true;{inject};
												:x: Invalid move!
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{aset;attack;true}
											}};
										:x:  FATAL ERROR! Please report to tag creator. `side_2 is out of bounds.`
										{aset;return;true}
									}
								}
							};
						p;
							{if;<;{aget;~v1};{aget;~v2};:x: Invalid move! The pawn can not move backwards!;
								{aset;~hor;
									{switch;{aget;~hor1};
										{math;+;{aget;~hor2};1};1;
										{aget;~hor2};0;
										-1
									}
								}
								{aset;~ver;
									{switch;{aget;~ver1};
										{math;+;{aget;~ver2};1};1;
										{math;+;{aget;~ver2};2};2;
										-1
									}
								}
								{switch;-1;
									{aget;~ver};:x: Invalid move! {aset;return;true};
									{aget;~hor};:x: Invalid move! {aset;return;true}
								}
								{if;==;1;{aget;~v2};
									{aset;~promote;true}
									{aset;~promote_piece;
										{switch;{lower;{args;3}};
											q;q;
											queen;q;
											k;n;
											n;n;
											knight;n;
											r;r;
											rook;r;
											b;b;
											bishop;b;
											0
										}
									};
									{aset;~promote;false}
								}
								{if;==;true;{aget;return};;
									{switch;{aget;~hor};
										0;
											{switch;{aget;~ver};
												1;
													{switch;{aget;~side_2};
														0;
															{if;==;true;{aget;~promote};
																{if;==;0;{aget;~promote_piece};
																	:x: You need to promote the pawn. Choose between `t!t chess move {aget;~mv1} {aget;~mv2} [queen|knight|rook|bishop]`.
																	{aset;return;true};
																	{aset;~piece;{aget;~promote_piece}}
																	{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																	{aset;{aget;~p}{aget;~mv1};-}
																	{aset;~move_success;true}
																};
																{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																{aset;{aget;~p}{aget;~mv1};-}
																{aset;~move_success;true}
															};
														1;
															:x: You can not move your piece here!
															{aset;return;true};
														2;
															:x: You can not move your piece here!
															{aset;return;true};
													};
												2;
													{if;!=;-;{aget;{aget;~p}{aget;~{aget;~h2}}{math;+;{aget;~v2};1}};
														:x: You can not move your piece here!
														{aset;return;true};
													{if;==;1;{aget;{aget;~p}unmoved$p_{aget;~mv1}};
														{switch;{aget;~side_2};
															0;
																{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																{aset;{aget;~p}{aget;~mv1};-}
																{aset;~move_success;true};
															1;
																:x: You can not move your piece here!
																{aset;return;true};
															2;
																:x: You can not move your piece here!
																{aset;return;true};
														};
														:x: You can not move pawns 2 spaces if it has been moved already!
														{aset;return;true}
													}}
											};
										1;
											{switch;{aget;~ver};
												0;:x: You can not move your piece here! {aset;return;true};
												1;
													{switch;{aget;~side_2};
														0;
															{if;!=;true;{regexreplace;{aget;~mv2};/[a-h]3/i;true};
																:x: You cannot move your piece here!
																{aset;return;true};
															{if;!=;1;{aget;{aget;~p}passant$P_{aget;~{aget;~h2}}{incr;{aget;~v2}}};
																:x: You cannot move your piece here!
																{aset;return;true};
															{if;!=;p;{aget;{aget;~p}{aget;~{aget;~h2}}{incr;{aget;~v2}}};
																:x:  FATAL ERROR! Please report to tag creator. `p does not exist in {aget;~{aget;~h2}}{incr;{aget;~v2}}`
																{aset;return;true};
															{if;!=;{aget;{aget;~p}passant};{aget;{aget;~p}move};
																:x: You cannot make an En Passant move anymore! It must be immedietly after the enemy pawn moves.
																{aset;return;true};
																{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																{aset;{aget;~p}{aget;~mv1};-}
																{aset;{aget;~p}{aget;~{aget;~h2}}{incr;{aget;~v2}};-}
																{aset;~move_success;true}
																{aset;~passant;true}
															}}}};
														1;
															:x: You can not move your piece here!
															{aset;return;true};
														2;
															{if;==;true;{aget;~promote};
																{if;==;0;{aget;~promote_piece};
																	:x: You need to promote the pawn. Choose between `t!t chess move {aget;~mv1} {aget;~mv2} [queen|knight|rook|bishop]`.
																	{aset;return;true};
																	{aset;~piece;{aget;~promote_piece}}
																	{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																	{aset;{aget;~p}{aget;~mv1};-}
																	{aset;~move_success;true}
																};
																{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																{aset;{aget;~p}{aget;~mv1};-}
																{aset;~move_success;true}
															};
														:x:  FATAL ERROR! Please report to tag creator. `~side_2 is out of bounds.`
														{aset;return;true}
													};
												2;:x: You can not move your piece here! {aset;return;true};
												:x:  FATAL ERROR! Please report to tag creator. `~ver is out of bounds` 
												{aset;return;true}
											}
									}
									{if;==;true;{aget;return};;
										{if;==;1;
											{aget;{aget;~p}unmoved$p_{aget;~mv1}};
											{if;==;2;{aget;~ver};
												{aset;{aget;~p}passant$p_{aget;~mv2};1}
												{aset;{aget;~p}passant;{incr;{aget;{aget;~p}move}}}
											}
											{aset;{aget;~p}unmoved$p_{aget;~mv1};0}
										}
										{switch;{aget;~move_success};
											1;{inject};
											true;{inject};
											:x: Invalid move!
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{aset;attack;true}
										}
									}
								}
							};
						:x:  FATAL ERROR! Please report to tag creator. `chess_color and piece does not match.`
						{aset;return;true}
					};
				w;
					{switch;{aget;~piece};
						-;0;
						P;
							{if;>;{aget;~v1};{aget;~v2};:x: Invalid move! The pawn can not move backwards!;
								{aset;~hor;
									{switch;{aget;~hor1};
										{math;+;{aget;~hor2};1};1;
										{aget;~hor2};0;
										-1
									}
								}
								{aset;~ver;
									{switch;{aget;~ver1};
										{math;+;{aget;~ver2};1};1;
										{math;+;{aget;~ver2};2};2;
										-1
									}
								}
								{switch;-1;
									{aget;~ver};:x: Invalid move! {aset;return;true};
									{aget;~hor};:x: Invalid move! {aset;return;true}
								}
								{if;==;8;{aget;~v2};
									{aset;~promote;true}
									{aset;~promote_piece;
										{switch;{lower;{args;3}};
											q;Q;
											queen;Q;
											k;N;
											n;N;
											knight;N;
											r;R;
											rook;R;
											b;B;
											bishop;B;
											0
										}
									};
									{aset;~promote;false}
								}
								{if;==;true;{aget;return};;
									{switch;{aget;~hor};
										0;
											{switch;{aget;~ver};
												1;
													{switch;{aget;~side_2};
														0;
															{if;==;true;{aget;~promote};
																{if;==;0;{aget;~promote_piece};
																	:x: You need to promote the pawn. Choose between `t!t chess move {aget;~mv1} {aget;~mv2} [queen|knight|rook|bishop]`.
																	{aset;return;true};
																	{aset;~piece;{aget;~promote_piece}}
																	{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																	{aset;{aget;~p}{aget;~mv1};-}
																	{aset;~move_success;true}
																};
																{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																{aset;{aget;~p}{aget;~mv1};-}
																{aset;~move_success;true}
															};
														1;
															:x: You can not move your piece here!
															{aset;return;true};
														2;
															:x: You can not move your piece here!
															{aset;return;true};
													};
												2;
													{if;!=;-;{aget;{aget;~p}{aget;~{aget;~h2}}{math;-;{aget;~v2};1}};
														:x: You can not move your piece here!
														{aset;return;true};
													{if;==;1;{aget;{aget;~p}unmoved$P_{aget;~mv1}};
														{switch;{aget;~side_2};
															0;
																{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																{aset;{aget;~p}{aget;~mv1};-}
																{aset;~move_success;true};
															1;
																:x: You can not move your piece here!
																{aset;return;true};
															2;
																:x: You can not move your piece here!
																{aset;return;true};
														};
														:x: You can not move pawns 2 spaces if it has been moved already!
														{aset;return;true}
													}}
											};
										1;
											{switch;{aget;~ver};
												0;:x: You can not move your piece here! {aset;return;true};
												1;
													{switch;{aget;~side_2};
														0;
															{if;!=;true;{regexreplace;{aget;~mv2};/[a-h]6/i;true};
																:x: You cannot move your piece here!
																{aset;return;true};
															{if;!=;1;{aget;{aget;~p}passant$p_{aget;~{aget;~h2}}{decr;{aget;~v2}}};
																:x: You cannot move your piece here!
																{aset;return;true};
															{if;!=;p;{aget;{aget;~p}{aget;~{aget;~h2}}{decr;{aget;~v2}}};
																:x:  FATAL ERROR! Please report to tag creator. `p does not exist in {aget;~{aget;~h2}}{decr;{aget;~v2}}`
																{aset;return;true};
															{if;!=;{aget;{aget;~p}passant};{aget;{aget;~p}move};
																:x: You cannot make an En Passant move anymore! It must be immedietly after the enemy pawn moves.
																{aset;return;true};
																{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																{aset;{aget;~p}{aget;~mv1};-}
																{aset;{aget;~p}{aget;~{aget;~h2}}{decr;{aget;~v2}};-}
																{aset;~move_success;true}
																{aset;~passant;true}
															}}}};
														1;
															{if;==;true;{aget;~promote};
																{if;==;0;{aget;~promote_piece};
																	:x: You need to promote the pawn. Choose between `t!t chess move {aget;~mv1} {aget;~mv2} [queen|knight|rook|bishop]`.
																	{aset;return;true};
																	{aset;~piece;{aget;~promote_piece}}
																	{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																	{aset;{aget;~p}{aget;~mv1};-}
																	{aset;~move_success;true}
																};
																{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
																{aset;{aget;~p}{aget;~mv1};-}
																{aset;~move_success;true}
															};
														2;
															:x: You can not move your piece here!
															{aset;return;true};
														:x:  FATAL ERROR! Please report to tag creator. `~side_2 is out of bounds.`
														{aset;return;true}
													};
												2;:x: You can not move your piece here! {aset;return;true};
												:x:  FATAL ERROR! Please report to tag creator. `~ver is out of bounds` 
												{aset;return;true}
											}
									}
									{if;==;true;{aget;return};;
										{if;==;1;
											{aget;{aget;~p}unmoved$P_{aget;~mv1}};
											{if;==;2;{aget;~ver};
												{aset;{aget;~p}passant$P_{aget;~mv2};1}
												{aset;{aget;~p}passant;{incr;{aget;{aget;~p}move}}}
											}
											{aset;{aget;~p}unmoved$P_{aget;~mv1};0}
										}
										{switch;{aget;~move_success};
											1;{inject};
											true;{inject};
											:x: Invalid move!
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{aset;attack;true}
										}
									}
								}
							};
						Q; 
							{aset;~hor;{if;!=;{aget;~hor1};{aget;~hor2};1{aset;~queen_move;h};0}}
							{aset;~ver;{if;!=;{aget;~ver1};{aget;~ver2};1{aset;~queen_move;v};0}}
							{if;&&;{aget;~hor};{aget;~ver};
								{aset;~hor;{math;-;{aget;~hor1};{aget;~hor2}}}
								{aset;~ver;{math;-;{aget;~ver1};{aget;~ver2}}}
								{if;!=;{aget;~hor};{aget;~ver};
									:x: Invalid move! You can only move diagonally.;
									{aset;~i_h1;{aget;~h1}}
									{aset;~i_v1;{aget;~v1}}
									{if;!=;0;{math;-;{aget;~ver1};{aget;~ver2};1};
										{loop;1;{math;-;{aget;~ver1};{aget;~ver2};1};
											{aset;~i_h1;{if;>;{aget;~h1};{aget;~h2};{decr;{aget;~i_h1}};{incr;{aget;~i_h1}}}}
											{aset;~i_v1;{if;>;{aget;~v1};{aget;~v2};{decr;{aget;~i_v1}};{incr;{aget;~i_v1}}}}
											{if;!=;-;{aget;{aget;~p}{aget;~{aget;~i_h1}}{aget;~i_v1}};
												{aset;~continue;0}
											} 
										}
									}
									{if;==;0;{aget;continue};
										:x: You cannot move your piece here!;
										{switch;{aget;~side_2};
											0;
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;~move_success;true};
											1;
												{if;!=;w;{aget;{userid}chess_color};
													:x: You can not move your piece here!
													{aset;return;true}
												}
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;~move_success;true};
											2;
												{if;!=;b;{aget;{userid}chess_color};
													:x: You can not move your piece here!
													{aset;return;true}
												}
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;~move_success;true};
											:x:  `side_2 is out of bounds.`
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{switch;{aget;~move_success};
												1;{inject};
												true;{inject};
												:x: Invalid move!
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{aset;attack;true}
											}
										}
									}
								};
								{switch;{aget;~queen_move};
									h;
										{if;!=;{aget;~v1};{aget;~v2};
											:x:  FATAL ERROR! Please report to tag creator. `v1 and v2 does not match.`;
											{aset;~i_h1;{aget;~hor2}}
											{if;==;{math;-;{aget;~hor1};{aget;~hor2}};1;
												{aset;~continue;true};
												{loop;1;{math;-;{aget;~hor1};{aget;~hor2};1};
													{aset;~i_h1;{incr;{aget;~i_h1}}}
													{if;!=;-;{aget;{aget;~p}{aget;~{aget;~i_h1}}{aget;~v1}};
														{aset;~continue;false}
													}
												}
											}
											{if;==;false;{aget;continue};:x: Invalid move!;
												{switch;{aget;~side_2};
													0;
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													1;
														{if;!=;w;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													2;
														{if;!=;b;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													:x:  `side_2 is out of bounds.`
													{aset;return;true}
												}
												{if;==;true;{aget;return};;
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}
												}
											}
										};
									v;
										{if;!=;{aget;~h1};{aget;~h2};
											:x:  FATAL ERROR! Please report to tag creator. `h1 and h2 does not match`;
											{aset;~i_v1;{aget;~ver2}}
											{if;==;{math;-;{aget;~ver1};{aget;~ver2}};1;
												{aset;~continue;true};
												{loop;1;{math;-;{aget;~ver1};{aget;~ver2};1};
													{aset;~i_v1;{incr;{aget;~i_v1}}}
													{if;!=;-;{aget;{aget;~p}{aget;~{aget;~h1}}{aget;~i_v1}};
														{aset;~continue;false};
													}
												}
											}
											{if;==;false;{aget;continue};:x: Invalid move!;
												{switch;{aget;~side_2};
													0;
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													1;
														{if;!=;w;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													2;
														{if;!=;b;{aget;{userid}chess_color};
															:x: You can not move your piece here!
															{aset;return;true}
														}
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;~move_success;true};
													:x:  `side_2 is out of bounds.`
													{aset;return;true}
												}
												{if;==;true;{aget;return};;
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}
												}
											}
										}
								}
							};
						K;
							{if;==;1;{aget;{aget;~p}unmoved$K};
								{switch;{aget;~mv2};
									g1; 
										{if;&&;{if;==;1;{aget;{aget;~p}unmoved$K};1;0};{if;==;1;{aget;{aget;~p}unmoved$R_h1};1;0};;
											:x: The King or Rook has already moved and you cannot castle anymore!
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
										{if;!=;-;{aget;{aget;~p}f1};{aset;~continue;false}}
										{if;!=;-;{aget;{aget;~p}g1};{aset;~continue;false}}
										{if;==;false;{aget;continue};:x: Invalid move!;
										{switch;{aget;~side_2};
											0;
												{if;!=;R;{aget;{aget;~p}h1};:x:  FATAL ERROR! Please report to tag creator. `rook not found in h1`;
												{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
												{aset;{aget;~p}{aget;~mv1};-}
												{aset;{aget;~p}f1;R}
												{aset;{aget;~p}h1;-}
												{aset;{aget;~p}unmoved$R_h1;0}
												{aset;{aget;~p}unmoved$K;0}
												{aset;~move_success;true}
												{switch;{aget;~move_success};
													1;{inject};
													true;{inject};
													:x: Invalid move!
													{aset;return;true}
												}
												{if;==;true;{aget;return};;
													{aset;attack;true}
												}};
											:x:  FATAL ERROR! Please report to tag creator. `{lb}userid{rb}side_2 out of bounds`
												{aset;return;true}
										}}};
									c1; 
										{if;&&;{if;==;1;{aget;{aget;~p}unmoved$K};1;0};{if;==;1;{aget;{aget;~p}unmoved$R_a1};1;0};;
											:x: The King or Rook has already moved and you cannot castle anymore!
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{if;!=;-;{aget;{aget;~p}b1};{aset;~continue;false}}
											{if;!=;-;{aget;{aget;~p}c1};{aset;~continue;false}}
											{if;!=;-;{aget;{aget;~p}d1};{aset;~continue;false}}
											{if;==;false;{aget;continue};:x: Invalid move!;
												{switch;{aget;~side_2};
													0;
														{if;!=;R;{aget;{aget;~p}h1};:x:  FATAL ERROR! Please report to tag creator. `rook not found in a1`;
														{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
														{aset;{aget;~p}{aget;~mv1};-}
														{aset;{aget;~p}d1;R}
														{aset;{aget;~p}a1;-}
														{aset;{aget;~p}unmoved$R_a1;0}
														{aset;{aget;~p}unmoved$K;0}
														{aset;~move_success;true}
														{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}};
													:x:  FATAL ERROR! Please report to tag creator. `{lb}userid{rb}side_2 out of bounds`
														{aset;return;true}
												}
											}
										};
										{aset;~hor;
											{switch;{aget;~hor1};
												{math;+;{aget;~hor2};0};0;
												{math;+;{aget;~hor2};1};1;
												-1
											}
										}
										{aset;~ver;
											{switch;{aget;~ver1};
												{math;+;{aget;~ver2};0};0;
												{math;+;{aget;~ver2};1};1;
												-1
											}
										}
										{switch;-1;
											{aget;~ver};:x: Invalid move! {aset;return;true};
											{aget;~hor};:x: Invalid move! {aset;return;true}
										}
										{if;==;true;{aget;return};;
											{aset;~move_success;true}
											{aset;{aget;~p}unmoved$K;0}
											{switch;{aget;~side_2};
												0;
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true}
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													};
												1;
													{if;!=;w;{aget;{userid}chess_color};
														:x: You can not move your piece here!;
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true}
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}};
												2;
													{if;!=;b;{aget;{userid}chess_color};
														:x: You can not move your piece here!;
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true}
													{switch;{aget;~move_success};
														1;{inject};
														true;{inject};
														:x: Invalid move!
														{aset;return;true}
													}
													{if;==;true;{aget;return};;
														{aset;attack;true}
													}};
												:x:  FATAL ERROR! Please report to tag creator. `side_2 is out of bounds.`
												{aset;return;true}
											}
										}
								};
								{aset;~hor;
									{switch;{aget;~hor1};
										{math;+;{aget;~hor2};0};0;
										{math;+;{aget;~hor2};1};1;
										-1
									}
								}
								{aset;~ver;
									{switch;{aget;~ver1};
										{math;+;{aget;~ver2};0};0;
										{math;+;{aget;~ver2};1};1;
										-1
									}
								}
								{switch;-1;
									{aget;~ver};:x: Invalid move! {aset;return;true};
									{aget;~hor};:x: Invalid move! {aset;return;true}
								}
								{if;==;true;{aget;return};;
									{aset;~move_success;true}
									{aset;{aget;~p}unmoved$K;0}
									{switch;{aget;~side_2};
										0;
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true}
											{switch;{aget;~move_success};
												1;{inject};
												true;{inject};
												:x: Invalid move!
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{aset;attack;true}
											};
										1;
											{if;!=;w;{aget;{userid}chess_color};
												:x: You can not move your piece here!;
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true}
											{switch;{aget;~move_success};
												1;{inject};
												true;{inject};
												:x: Invalid move!
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{aset;attack;true}
											}};
										2;
											{if;!=;b;{aget;{userid}chess_color};
												:x: You can not move your piece here!;
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true}
											{switch;{aget;~move_success};
												1;{inject};
												true;{inject};
												:x: Invalid move!
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{aset;attack;true}
											}};
										:x:  FATAL ERROR! Please report to tag creator. `side_2 is out of bounds.`
										{aset;return;true}
									}
								}
							};
						B;
							{aset;~hor;{math;-;{aget;~hor1};{aget;~hor2}}}
							{aset;~ver;{math;-;{aget;~ver1};{aget;~ver2}}}
							{if;!=;{aget;~hor};{aget;~ver};
								:x: Invalid move! You can only move diagonally.;
								{aset;~i_h1;{aget;~h1}}
								{aset;~i_v1;{aget;~v1}}
								{if;!=;0;{math;-;{aget;~ver1};{aget;~ver2};1};
									{loop;1;{math;-;{aget;~ver1};{aget;~ver2};1};
										{aset;~i_h1;{if;>;{aget;~h1};{aget;~h2};{decr;{aget;~i_h1}};{incr;{aget;~i_h1}}}}
										{aset;~i_v1;{if;>;{aget;~v1};{aget;~v2};{decr;{aget;~i_v1}};{incr;{aget;~i_v1}}}}
										{if;!=;-;{aget;{aget;~p}{aget;~{aget;~i_h1}}{aget;~i_v1}};
											{aset;~continue;0}
										} 
									}
								}
								{if;==;0;{aget;continue};
									:x: You cannot move your piece here!;
									{switch;{aget;~side_2};
										0;
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true};
										1;
											{if;!=;w;{aget;{userid}chess_color};
												:x: You can not move your piece here!
												{aset;return;true}
											}
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true};
										2;
											{if;!=;b;{aget;{userid}chess_color};
												:x: You can not move your piece here!
												{aset;return;true}
											}
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true};
										:x:  `side_2 is out of bounds.`
										{aset;return;true}
									}
									{if;==;true;{aget;return};;
										{switch;{aget;~move_success};
											1;{inject};
											true;{inject};
											:x: Invalid move!
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{aset;attack;true}
										}
									}
								}
							};
						N;
							{aset;~hor;
								{switch;{aget;~hor1};
									{math;+;{aget;~hor2};1};1{aset;~h_m;v};
									{math;+;{aget;~hor2};2};2{aset;~h_m;h};
									0
								}
							}
							{aset;~ver;
								{switch;{aget;~ver1};
									{math;+;{aget;~ver2};2};1{aset;~v_m;v};
									{math;+;{aget;~ver2};1};2{aset;~v_m;h};
									0
								}
							}
							{if;==;{aget;~hor};{aget;~ver};
								{if;==;0;{aget;~hor};
									:x: Invalid move!
									{aset;return;true}
								};
								:x: Invalid move!
								{aset;return;true}
							}
							{if;==;true;{aget;return};;
								{aset;~i_h;{aget;~h2}}
								{aset;~i_v;{aget;~v2}}
								{if;!=;{aget;~h_m};{aget;~v_m};
									:x:  FATAL ERROR! Please report to tag creator. `h_m and v_m does not match.`;
									{switch;{aget;~side_2};
										0;
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true};
										1;
											{if;!=;w;{aget;{userid}chess_color};
												:x: You can not move your piece here!
												{aset;return;true}
											}
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true};
										2;
											{if;!=;b;{aget;{userid}chess_color};
												:x: You can not move your piece here!
												{aset;return;true}
											}
											{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
											{aset;{aget;~p}{aget;~mv1};-}
											{aset;~move_success;true};
										:x:  `side_2 is out of bounds.`
										{aset;return;true}
									}
									{if;==;true;{aget;return};;
										{switch;{aget;~move_success};
											1;{inject};
											true;{inject};
											:x: Invalid move!
											{aset;return;true}
										}
										{if;==;true;{aget;return};;
											{aset;attack;true}
										}
									}
								}
							};
						R;
							{aset;~hor;{if;!=;{aget;~hor1};{aget;~hor2};1{aset;~rook_move;h};0}}
							{aset;~ver;{if;!=;{aget;~ver1};{aget;~ver2};1{aset;~rook_move;v};0}}
							{if;&&;{aget;~hor};{aget;~ver};
								:x: Invalid move! Rooks can only move horizontally or vertically, it cannot be both.;
							{switch;{aget;~rook_move};
								h;
									{if;!=;{aget;~v1};{aget;~v2};
										:x:  FATAL ERROR! Please report to tag creator. `v1 and v2 does not match`;
										{aset;~i_h1;{aget;~hor2}}
										{if;==;{math;-;{aget;~hor1};{aget;~hor2}};1;
											{aset;~continue;true};
											{if;!=;0;{math;-;{aget;~hor1};{aget;~hor2};1};
												{loop;1;{math;-;{aget;~hor1};{aget;~hor2};1};
													{aset;~i_h1;{incr;{aget;~i_h1}}}
													{if;!=;-;{aget;{aget;~p}{aget;~{aget;~i_h1}}{aget;~v1}}; 
														{aset;~continue;false}
													}
												}
											}
										}
										{if;==;false;{aget;continue};:x: Invalid move!;
											{switch;{aget;~side_2};
												0;
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true};
												1;
													{if;!=;w;{aget;{userid}chess_color};
														:x: You can not move your piece here!
														{aset;return;true}
													}
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true};
												2;
													{if;!=;b;{aget;{userid}chess_color};
														:x: You can not move your piece here!
														{aset;return;true}
													}
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true};
												:x:  `side_2 is out of bounds.`
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{switch;{aget;~move_success};
													1;{inject};
													true;{inject};
													:x: Invalid move!
													{aset;return;true}
												}
												{if;==;true;{aget;return};;
													{aset;attack;true}
												}
											}
										}
									};
								v;
									{if;!=;{aget;~h1};{aget;~h2};
										:x:  FATAL ERROR! Please report to tag creator. `h1 and h2 does not match`;
										{aset;~i_v1;{aget;~ver2}}
										{if;==;{math;-;{aget;~ver1};{aget;~ver2}};1;
											{aset;~continue;true};
											{if;!=;0;{math;-;{aget;~ver1};{aget;~ver2};1};
												{loop;1;{math;-;{aget;~ver1};{aget;~ver2};1};
													{aset;~i_v1;{incr;{aget;~i_v1}}}
													{if;!=;-;{aget;{aget;~p}{aget;~{aget;~h1}}{aget;~i_v1}};
														{aset;~continue;false};
													}
												}
											}
										}
										{if;==;false;{aget;continue};:x: Invalid move!;
											{switch;{aget;~side_2};
												0;
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true};
												1;
													{if;!=;w;{aget;{userid}chess_color};
														:x: You can not move your piece here!
														{aset;return;true}
													}
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true};
												2;
													{if;!=;b;{aget;{userid}chess_color};
														:x: You can not move your piece here!
														{aset;return;true}
													}
													{aset;{aget;~p}{aget;~mv2};{aget;~piece}}
													{aset;{aget;~p}{aget;~mv1};-}
													{aset;~move_success;true};
												:x:  `side_2 is out of bounds.`
												{aset;return;true}
											}
											{if;==;true;{aget;return};;
												{switch;{aget;~move_success};
													1;{inject};
													true;{inject};
													:x: Invalid move!
													{aset;return;true}
												}
												{if;==;true;{aget;return};;
													{aset;attack;true}
												}
											}
										}
									}
							}
							{if;==;true;{aget;~move_success};
								{switch;{aget;~mv1};
									a1;{aset;{aget;~p}unmoved$R_a1;0};
									h1;{aset;{aget;~p}unmoved$R_h1;0};
								}
							}};
						:x:  FATAL ERROR! Please report to tag creator. `chess_color and piece does not match.`
						{aset;return;true}
					};
				:x:  FATAL ERROR! Please report to tag creator. `chess_color is out of bounds.`
				{aset;return;true}
			}}}}}}}}}}
		;/\t+|^[\r\n]+/gm;};
	board;
		{regexreplace;
			{if;!=;1;{aget;firstrun};
				{if;==;`User not found`;{userid;246903976937783296};
					{set;username;Kao}
					{set;userdiscrim;0001};
					{set;username;{username;246903976937783296}}
					{set;userdiscrim;{userdiscrim;246903976937783296}}
				}
				```rb
				`Chess Tag {aget;version}` ```
				**Introduction:**
				You have copied this tag from the creator, **{get;username}#{get;userdiscrim}**.
				Thank you for appreciating my work enough that you wanted it on your own server. But be sure to thank me, and to make sure to tell me that you have copied it. Run the tag `t!t chess_copy` in the Tatsumaki Server in order to get instructions on how to make the tag work.;
			{if;!=;1;{aget;{userid}chess_game};	
				:x: You do not have an active chess game!;
			{aset;~p;{aget;{userid}chess_instance}}
			**Move Number**: **__{aget;{aget;~p}move}__** - **{username;{aget;{aget;~p}p{if;==;w;{aget;{aget;~p}tm};1;2}}}{aget;aph}s** turn to move
			{switch;{aget;{userid}chess_style};
				obsolete;
					{aget;chess_link0}{set;index0;1}{set;index1;8}{loop;1;64;{aget;{aget;~p}{aget;~{get;index0}}{get;index1}}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}&tm={aget;{aget;~p}tm}{if;==;m;{aget;{userid}chess_size};;&s={aget;{userid}chess_size}}&tt={regexreplace;{username;{aget;{aget;~p}p2}};/[^a-zA-Z0-9]/g;}&ct={regexreplace;{username;{aget;{aget;~p}p1}};/[^a-zA-Z0-9]/g;}{switch;{aget;{userid}chess_board};;;~plain;;&bp={aget;{userid}chess_board}}{switch;{aget;{userid}chess_board};;;alpha;;&ps={aget;{userid}chess_piece}}{switch;{aget;{userid}chess_coord};;&cm=o;nc;;&cm={aget;{userid}chess_coord}};
					{aget;chess_link1}{set;index0;1}{set;index1;1}{regexreplace;{loop;1;64;{aget;{aget;~p}{aget;~{get;index0}}{get;index1}}{if;==;8;{get;index0};{set;index0;1}{set;index1;{incr;{get;index1}}};{set;index0;{incr;{get;index0}}}}};/-/g;_}&p={aget;{userid}chess_sizen}&s={aget;{userid}chess_piecen}&c={aget;{userid}chess_color_darkn}{aget;{userid}chess_color_lightn}{switch;{aget;{userid}chess_coordn};;&r=FFFFFF;nc;;o;&r=FFFFFF;&r=FFFFFF}{set;k;{if;&&;{if;!=;;{aget;~{aget;~p}1a};1;0};{if;!=;;{aget;~{aget;~p}1b};1;0};{aget;~{aget;~p}1a}Q{aget;~{aget;~p}1b}Q0Q0Q255A}{if;&&;{if;!=;;{aget;~{aget;~p}2a};1;0};{if;!=;;{aget;~{aget;~p}2b};1;0};{aget;~{aget;~p}2a}Q{aget;~{aget;~p}2b}{if;==;true;{aget;~{aget;~p}eat};Q255Q0Q0;Q0Q0Q255}}}{if;!=;;{get;k};&k={get;k}}&z={aget;{aget;~p}tm}{if;==;b;{aget;{aget;~p}tm};&f=1}
			}}}
		;/\t+|^[\r\n]+/gm;};
		{regexreplace;
		{if;!=;1;{aget;firstrun};
			{if;==;`User not found`;{userid;246903976937783296};
				{set;username;Kao}
				{set;userdiscrim;0001};
				{set;username;{username;246903976937783296}}
				{set;userdiscrim;{userdiscrim;246903976937783296}}
			}
			```rb
			`Chess Tag {aget;version}` ```
			**Introduction:**
			You have copied this tag from the creator, **{get;username}#{get;userdiscrim}**.
			Thank you for appreciating my work enough that you wanted it on your own server. But be sure to thank me, and to make sure to tell me that you have copied it. Run the tag `t!t chess_copy` in the Tatsumaki Server in order to get instructions on how to make the tag work.;
		{switch;{lower;{args;0}};
			forfeit;{inject};
			quit;{inject};
			stop;{inject};
			end;{inject};
			{regexreplace;
				{aget;help}
			;/\t+|^[\r\n]+/gm;}
			{aset;return;true}
		}
		{if;==;true;{aget;return};;
			{switch;{aget;{userid}chess_game};
				0;
					:x: You do not have an active chess game!
					{aset;return;true};
				1;
					**Quit your chess game!**{aget;nl}You have lost the game.;
					:x:  FATAL ERROR! Please report to tag creator. `chess_game is out of bounds.`
					{aset;return;true}
			}
			{aset;~en;{aget;{userid}en}}
			{aset;{userid}chess_game;0}
			{aset;{userid}chess_instance}
			{aset;{aget;~en}chess_game;0}
			{aset;{aget;~en}chess_instance}
		}};/\t+|^[\r\n]+/gm;}
}
{if;==;true;{aget;attack};
	{regexreplace;
	{aset;~p;{aget;{userid}chess_instance}}
	{aset;~{aget;~p}1a;{aget;~h1}}
	{aset;~{aget;~p}1b;{aget;~v1}}
	{aset;~{aget;~p}2a;{aget;~h2}}
	{aset;~{aget;~p}2b;{aget;~v2}}
	{if;!=;-;{aget;~piece2};{aset;~{aget;~p}eat;true}**Ate enemy {switch;{lower;{aget;~piece2}};r;Rook;n;Knight;b;Bishop;q;Queen;k;King;p;Pawn} and moved;{if;==;true;{aget;~passant};{aset;~{aget;~p}eat;true}**Ate enemy Pawn and moved;{aset;~{aget;~p}eat}**Moved}} {if;==;true;{aget;~promote};Pawn;{switch;{lower;{aget;~piece}};r;Rook;n;Knight;b;Bishop;q;Queen;k;King;p;Pawn}} from position `{aget;~{aget;~{aget;~p}1a}}{aget;~{aget;~p}1b}` to `{aget;~{aget;~{aget;~p}2a}}{aget;~{aget;~p}2b}`{if;==;true;{aget;~promote};, and promoted Pawn to {switch;{lower;{aget;~promote_piece}};r;Rook;n;Knight;b;Bishop;q;Queen;k;King;p;Pawn}}!** {if;==;k;{lower;{aget;~piece2}};{aget;nl}
		:tada: **Congratulations!  {username}#{userdiscrim} has won the game!**
		{aset;~en;{aget;{userid}en}}
		{aset;{userid}chess_game;0}
		{aset;{aget;~en}chess_game;0}
	}
	{aset;{userid}{aget;~p}moves_{aget;{aget;~p}{aget;~mv1}};
		{math;+;0{aget;{userid}{aget;~p}moves_{aget;{aget;~p}{aget;~mv1}};1}}
	}
	{aset;{aget;~p}move;{math;+;0{aget;{aget;~p}move};1}}
	{aset;{aget;~p}tm;{if;==;w;{aget;{aget;~p}tm};b;w}};/\t+|^[\r\n]+/gm;}
	{regexreplace;
	**Move Number**: **__{aget;{aget;~p}move}__** - **{username;{aget;{aget;~p}p{if;==;w;{aget;{aget;~p}tm};1;2}}}{aget;aph}s** turn to move
	{aset;~en;{aget;{userid}en}}
	{switch;{aget;{aget;~en}chess_style};
		obsolete;
			{aget;chess_link0}{set;index0;1}{set;index1;8}{loop;1;64;{aget;{aget;~p}{aget;~{get;index0}}{get;index1}}{if;==;8;{get;index0};{set;index0;1}{set;index1;{decr;{get;index1}}};{set;index0;{incr;{get;index0}}}}}&tm={aget;{aget;~p}tm}{if;==;m;{aget;{aget;~en}chess_size};;&s={aget;{aget;~en}chess_size}}&tt={regexreplace;{username;{aget;{aget;~p}p2}};/[^a-zA-Z0-9]/g;}&ct={regexreplace;{username;{aget;{aget;~p}p1}};/[^a-zA-Z0-9]/g;}{switch;{aget;{aget;~en}chess_board};;;~plain;;&bp={aget;{aget;~en}chess_board}}{switch;{aget;{aget;~en}chess_board};;;alpha;;&ps={aget;{aget;~en}chess_piece}}{switch;{aget;{aget;~en}chess_coord};;&cm=o;nc;;&cm={aget;{aget;~en}chess_coord}};
			{aget;chess_link1}{set;index0;1}{set;index1;1}{regexreplace;{loop;1;64;{aget;{aget;~p}{aget;~{get;index0}}{get;index1}}{if;==;8;{get;index0};{set;index0;1}{set;index1;{incr;{get;index1}}};{set;index0;{incr;{get;index0}}}}};/-/g;_}&p={aget;{aget;~en}chess_sizen}&s={aget;{aget;~en}chess_piecen}&c={aget;{aget;~en}chess_color_darkn}{aget;{aget;~en}chess_color_lightn}{switch;{aget;{aget;~en}chess_coordn};;&r=FFFFFF;nc;;o;&r=FFFFFF;&r=FFFFFF}{set;k;{if;&&;{if;!=;;{aget;~{aget;~p}1a};1;0};{if;!=;;{aget;~{aget;~p}1b};1;0};{aget;~{aget;~p}1a}Q{aget;~{aget;~p}1b}Q0Q0Q255A}{if;&&;{if;!=;;{aget;~{aget;~p}2a};1;0};{if;!=;;{aget;~{aget;~p}2b};1;0};{aget;~{aget;~p}2a}Q{aget;~{aget;~p}2b}{if;==;true;{aget;~{aget;~p}eat};Q255Q0Q0;Q0Q0Q255}}}{if;!=;;{get;k};&k={get;k}}&z={aget;{aget;~p}tm}{if;==;b;{aget;{aget;~p}tm};&f=1}
	};/\t+|^[\r\n]+/gm;}
}
{if;==;true;{aget;perm_move};
	{aset;{aget;~p}tm;{aget;{userid}chess_color}}
}
{if;==;true;{aget;always_move};
	{aset;{userid}chess_color;{aget;{aget;~p}tm}}
};/\t+|^[\r\n]+/gm;}	